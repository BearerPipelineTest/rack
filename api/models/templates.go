// Code generated by go-bindata.
// sources:
// models/templates/app.tmpl
// models/templates/service/mysql.tmpl
// models/templates/service/papertrail.tmpl
// models/templates/service/postgres.tmpl
// models/templates/service/redis.tmpl
// models/templates/service/webhook.tmpl
// DO NOT EDIT!

package models

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"strings"
	"os"
	"time"
	"io/ioutil"
	"path/filepath"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name string
	size int64
	mode os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesAppTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xdc\x5b\x7b\x73\xdb\xb8\x11\xff\xdf\x9f\x02\x83\xc9\x1f\xed\x8d\xac\xd8\xce\xdc\xb5\xd5\xb4\x9d\x71\x64\x27\x51\xcf\xaf\x4a\x4e\x6e\xda\x1b\xcf\x0d\x4d\x41\x16\x2b\x8a\xe0\x11\xa0\x13\xc5\xa3\xef\xde\xc5\x83\x24\x5e\x14\x65\xd9\xce\xa4\xbd\x4b\x1c\x8b\x58\x2e\x16\x8b\xc5\xee\x6f\x17\xab\x87\x07\x34\x25\xb3\x24\x23\x08\x47\x79\x8e\xd1\x7a\xbd\x87\xd0\x03\xfc\x45\x08\x1f\xff\x32\xb9\x26\xcb\x3c\x8d\x38\x79\x47\x8b\x65\xc4\x3f\x91\x82\x25\x34\xc3\x68\x80\xf0\xd1\xc1\xe1\xc1\xfe\xc1\x5f\xe0\x0f\xee\x29\xf2\x21\xcd\xa6\x09\x87\x71\x86\x07\x9a\x05\xb0\x7a\x40\x5c\xf3\x40\xf8\x36\x4a\xa3\x2c\x26\xc5\x7e\xdc\x90\xa2\xbe\x9a\xd3\x23\xce\x0b\x1a\x13\xc6\xb6\xa2\x2d\xc8\x5d\xc2\x78\xb1\x6a\x23\xc6\x57\x45\x72\x0f\x94\x42\x30\x84\xdf\x65\x83\xc1\xe9\xef\x65\x94\x0a\x41\x7f\x15\x4f\xc6\x64\x06\xbf\xd6\x54\x68\xdd\x43\xf8\x5f\x04\x78\xdc\x20\xc5\x62\xad\xd7\x78\x15\x15\xd1\x92\x70\xd0\x83\x50\xc2\xe6\x45\xe6\x82\x76\x8b\x05\x5a\x74\x95\xc0\xc3\xb4\x64\x30\x8d\xa1\x49\x78\x78\xbd\xca\x89\x54\xfe\x84\x17\x49\x76\xa7\x15\x2f\x87\x4e\xc8\x2c\x2a\x53\x2e\x47\xed\xe7\x2c\x2e\x92\x9c\x57\xdb\x86\xf5\xd0\xba\x57\xcf\x94\x97\x81\x59\x80\xf4\xa2\x5c\xde\x82\x04\x81\x49\xe4\xf6\x1f\xb4\x4d\x03\xa3\xc3\xab\x8f\x88\xcd\xa3\x82\x30\x44\x67\x88\x44\xf1\x1c\xe9\xd5\xfa\xf3\x9f\x66\xf7\x49\x41\xb3\x25\xc9\x78\x58\x8e\xf6\xc5\x6e\x58\x6b\x70\xa9\x3f\x93\xd5\x4b\x4f\x61\x18\xda\x76\xd3\xd8\x7a\x2b\x88\x30\x8d\x24\x83\xad\xcf\xa2\x14\xa5\x34\x9a\xa2\xca\xa0\x18\x3c\x07\x35\x4a\xfe\x88\x95\xb7\x19\xe1\xac\x45\xe4\x0b\x6a\x0e\x1c\xa7\x29\xfd\x4c\xa6\x9f\xa2\xb4\x24\xca\xe4\xa5\x71\xf7\x24\x1d\xba\xf1\xd6\x30\x26\x29\x89\x58\x68\x0d\xcf\x6d\x7b\x63\x92\x53\x96\x70\x5a\x84\xf6\xe5\x69\x93\x4d\x68\x59\xc4\x04\xc5\x74\x4a\x50\xd1\x4c\xe3\x89\x30\xd1\x8a\x0c\xcf\x7f\x06\x6e\xe5\xaf\xe0\x07\xc1\x61\x0c\x8f\x06\x03\x45\x3c\x18\x8c\xa6\x7f\xdf\x45\xa6\x4f\x57\xc3\x6a\xe3\xd0\x8c\x16\x88\xcf\x13\x86\x84\xdb\x6d\x93\xaa\xdd\x9a\x5e\x46\x38\xc7\xba\x3a\x84\xac\xc2\x81\x25\x9d\x63\xd1\x7f\x18\x9f\xfe\xf3\xe3\x68\x7c\x7a\xf2\x47\x74\x16\x2d\x6f\xa7\x11\x1a\x82\x63\xa3\xcb\x6b\x9a\x27\x31\xfa\x10\x65\xd3\x94\x14\x48\x5b\x1c\xaa\x38\x1a\x62\x9e\x27\xd9\x19\xc9\xee\xf8\x5c\x0a\x79\x68\x0e\x39\xc7\xca\x97\xef\x6a\xd8\xa2\xb9\x46\x69\x40\x23\x34\xb6\xab\xc2\x82\x0a\xb2\x22\xc6\x98\x30\x69\x89\xa6\x85\x61\x43\x07\x63\x9a\xb6\x78\x0b\x29\xe4\xe8\xf8\x7c\x30\x90\x34\x86\x24\x57\x05\xcd\x49\xc1\x13\x62\x9b\xad\x38\xea\x8c\x95\x4b\x22\xe8\xaf\x68\x9a\xc4\xab\x13\x1a\x97\x9e\x67\x75\x36\x4f\x84\xf2\xa3\x7d\x88\xe6\x87\x7f\x32\x26\x51\x66\xc8\xc1\x1a\xf4\xfb\xbf\x5a\x43\xc8\xe1\x27\xc9\x4f\x67\x33\x12\x4b\x07\x24\x5d\x8e\xc3\x4d\x8b\x9e\x64\x71\x92\x47\xa9\x0a\xc5\x13\x52\xdc\x27\x31\x51\x4e\x29\x95\x06\xd2\x8f\x96\xd1\x57\x9a\x45\x9f\x59\x3f\xa6\x4b\x19\x82\x03\x7c\x8e\x63\x6d\x61\xf0\x1e\xe3\x6c\xd0\x2c\xbc\xf1\x68\xd5\x7f\x6b\xeb\xb3\x39\x6a\x71\x86\xe0\x0e\x56\x06\xc2\xbf\xc6\xf6\x63\xa1\x49\xa5\x6b\x5b\x07\xae\x06\x14\xe5\xea\x02\x10\x82\xd4\xc1\x74\x99\x64\x02\x96\x44\xe0\x79\x3c\x5d\xe0\x8e\x0d\x92\x34\xdb\x6c\x92\x24\xb4\x36\x4a\x28\xd6\xdb\x0a\x43\x65\xf8\x07\xf1\xb1\x32\x4c\xf5\x00\xad\x3b\xd4\x66\x7e\x6a\x28\xd7\x3e\x9c\x68\x4c\x7b\x83\x59\x2b\x5f\x30\x18\xbc\x2b\x33\x25\xd5\x56\xd6\x3d\x04\x67\xee\x5b\xf2\xe4\xcd\xdb\x32\x5e\x10\xde\x80\xbb\x7f\xd0\x44\x9b\xc6\x3e\xac\x14\xfe\x01\x58\x78\x4f\xbf\xc0\xef\x0d\xd6\x93\x62\x8c\x01\x37\x8a\xd3\x0c\x8b\xf7\xed\x0c\x18\x6b\xc0\xe0\x72\x55\x4c\x0b\xe5\xb4\x5e\x5b\x6c\x6b\x88\x2c\x20\xe4\xeb\x99\x84\xcd\xf0\xb9\xff\x35\xc9\xb1\x9a\xa4\xd5\xfc\xb4\x33\x14\x5c\xf4\x49\x20\x5f\x14\x0e\xb0\xed\xf1\x9c\x2c\x21\x92\x4d\x92\xaf\x52\x9d\x87\x47\x7f\xb6\x87\x2b\x87\xa2\x84\x7e\x4f\xf8\x31\x57\x56\xe1\x79\x1d\x61\x13\x45\xe6\x9d\x30\x3c\x2e\x33\x9e\x28\x1b\xce\x40\xe3\xff\x61\xf6\x04\xd7\x30\x46\x4b\x69\x5b\x6f\x0e\x70\xbb\x29\x84\x51\x71\x51\xfb\xc3\x4e\x60\xfc\x08\x52\xa6\xfc\xc8\x36\x29\x82\xcb\x35\x44\xcc\x48\x5c\x16\x09\x5f\xe1\x16\x66\x8c\xab\x34\xc1\x76\xf5\x97\x25\xcf\x4b\xde\x9d\xfd\x50\x4d\xd7\xb9\xaa\x4e\xc2\x7a\x51\x36\x65\x8d\x22\x08\xe7\x10\x19\x1d\x70\x23\x71\xa0\xb2\x10\x6d\xb4\x35\x5d\xb3\x89\x7b\xd5\xcf\xf5\x1e\xcc\x48\xb2\xa9\xe4\x6b\x64\x8b\xa1\xf4\x4c\x25\x8f\x0f\xa8\x88\xb2\x3b\x82\x5e\x2d\xd0\xe0\x6f\xa8\x7f\x9a\x81\x80\xc2\x27\xb2\x6a\x11\xf8\x2d\x28\x62\x01\x74\x65\x0e\x07\x5d\xd0\xad\xd7\x4d\x20\xf0\x13\x34\x71\xde\x70\x6d\xa6\x8d\x38\x9b\x05\xab\xd2\x2a\x47\x28\x22\x85\xaa\x45\x69\xa4\x20\x7d\x21\x24\x0c\xa8\xf3\x65\x86\xeb\x96\x8c\xc8\xca\x87\x7e\xfc\xc9\x7c\x6e\x61\xa0\xf3\xb7\x22\x0b\x1a\x1f\x9f\x23\x4e\x01\x8b\x0a\x5b\x25\xd8\xb2\x9c\x80\x14\xc0\x23\x29\xc8\x74\x48\x4b\x2b\x38\x34\x18\xa6\x4d\x18\x1b\x26\x79\xa8\xe5\x7a\x4e\x50\x26\x5f\x15\x42\x25\x19\x98\x32\x9c\x76\xe9\xa4\x64\xb2\xc6\x61\x5c\xab\x50\x88\x0b\x86\x06\x28\x1a\x3c\x13\x5a\x10\x92\xa3\xa2\xcc\x32\xb0\x14\x44\x33\xb4\x82\x53\x84\x62\x9d\xa6\x36\xab\xd9\x76\x7b\x6a\x8b\x95\x3b\x81\x7f\x86\x41\x96\x34\x96\x1a\xb0\xd2\x8a\x44\x99\xa5\x98\x0b\x9f\xd1\xbb\xf7\x05\x2d\xf3\x4d\xaf\xd5\x34\xd5\x7b\x9b\xe5\x32\xdc\x43\x8b\x64\x56\x20\xd3\xa3\x80\xbe\x39\xe4\x6e\xcb\xaa\x16\x12\x8c\x61\x78\x02\x29\x71\xbd\xa3\x87\xcd\x11\x6b\x59\x8b\x1d\x31\xe9\x1d\x93\x3f\x15\xd1\x36\x4b\x69\x9c\x62\x75\x06\x5e\x2d\xa3\x2c\x99\x11\xc6\x8d\x43\x00\x8f\x93\x19\xea\x7f\x88\x20\xdb\x90\xef\x35\x07\xb5\xed\xd4\x84\x2d\xf6\x74\x38\xb9\x8e\xd8\xe2\x44\x48\x91\xf0\x40\x62\x90\x83\xac\xec\x52\xc6\x50\x0b\x26\xf4\x6a\x1c\x28\xc3\xd2\x4d\x00\xe2\x2b\x72\x81\xd9\xdd\x39\x0c\x62\x03\x2d\x1d\xf6\x0f\xb6\x83\x14\x7a\xe2\x6b\xba\x20\x59\x67\xd4\x6c\x8d\x98\x1a\xf2\xb5\xc0\x0f\x07\x74\x00\x56\x8b\x17\xf2\x0d\x09\x12\xc4\xb6\xd4\x3a\xc4\x3e\x10\x31\xd3\xf1\x9a\x51\xf5\xcc\x21\x75\x6a\x29\x35\xb9\xf9\xdc\x79\xa5\x86\x38\xd5\x29\x23\x2b\x97\x44\x68\x5c\x97\xca\xcc\xe0\x43\x84\x63\xff\x8d\xc3\xa0\x0a\x3b\x1b\x61\x61\xd8\x5e\x0c\xaf\xdf\x62\x28\x86\x1c\xca\x50\xe1\x7d\x30\xd5\xb7\x3a\x96\x36\x16\xd9\xcc\x53\x1b\x79\xbf\xa2\xaa\xa0\xae\x9c\xd8\x50\x76\xcf\xe6\xae\x8f\x92\xc1\xcd\xda\xfb\x80\xd9\x48\x7b\x6d\x9e\x77\x58\x6e\xb5\xda\xef\xc2\x64\x8d\x02\x63\xbd\xf7\xd5\x33\x87\xd4\x0d\x45\x35\x7d\x57\xd8\xfa\x96\xa7\xc4\x77\x3d\x9b\xc4\xf4\xfd\x88\x7b\xe8\x6a\x14\x5d\x63\xa4\x66\xc7\x1d\xda\x33\x1a\x4d\x2b\x53\x0b\x64\x89\x8d\x13\xed\x5f\xd1\x82\x9f\x47\x79\x2e\xc0\x96\x6b\xba\xc8\x57\xcc\xc0\x51\xcc\xa3\x8c\x3b\xa0\x36\xf5\xa0\x3f\xa4\x19\x8f\x20\x52\x14\x61\x55\x86\xcf\x02\x72\x37\xe8\x82\xaa\x58\xbb\x5d\x66\x68\xb2\xec\x82\x08\xc1\x6b\x02\x1b\xc6\xd5\xab\x37\x63\xd5\xab\xea\x45\x2b\x58\x35\xef\x84\xb5\xef\xa2\xd1\x8a\x49\x5f\x87\x43\xad\x3c\xf1\xb2\x50\x9e\xe1\x79\x86\xe2\x7c\xce\x92\xb8\xfb\x62\xe1\xa9\xdc\xe5\x5e\x5a\x67\x18\xec\x11\x52\x14\xb2\x0b\xe3\x17\x90\x55\x09\x63\xdf\x9b\x18\x25\x71\xfa\x65\x05\x3f\x38\x8d\x69\xfa\x9d\x08\x6c\xc9\x14\x92\x7b\x27\x7b\x0d\xa7\x1c\xcf\x69\xab\xbb\xac\xb5\xfa\x75\xa7\x12\xbb\xbb\x15\x8f\x2a\xef\x3f\xc3\xa1\x7a\xb4\xc0\x2f\x2f\xe1\x07\xca\x42\x37\x55\x5b\xe9\x32\xc9\xa6\xe4\x8b\x31\xd9\x18\x32\x2b\xba\x64\xdf\x58\xc7\xfa\xb8\xee\xb2\x06\xfb\x66\xc9\x13\xef\x09\xb7\x4e\x4f\x3f\xc6\xdf\xd1\x7a\x76\x72\x1f\x76\x4a\xbc\x8b\xff\xc0\x15\x69\xad\x4c\x47\x87\x8e\xed\x9a\xe9\xb2\x0b\x22\x85\xaa\x2d\x6c\xa1\x00\xc4\xc9\xc5\x44\xa1\x32\xe7\x6a\xfc\x1b\xba\x2e\x3f\xc7\x7f\x12\xef\x8d\xd9\xca\xe3\xf9\x55\x28\x37\x20\xaf\xb1\x6d\x7d\x13\x34\x6a\xa6\xcf\x60\x42\x6e\xf5\x62\x27\x23\x0a\xec\xfc\x44\x17\x44\xed\x0a\x85\x5b\xa3\x50\xd7\x90\x16\xa9\x89\x02\x42\xf9\x0c\x96\x64\x76\xc1\xcc\xc3\xc1\x68\x8b\x04\x61\xff\xb6\xde\x4f\x07\xd1\x62\x4b\xa2\x51\x76\x57\x88\x3e\x04\x2f\xb7\xdc\x68\xbd\x9a\xca\x01\xec\x78\x98\x4c\x8b\x91\xd0\x07\x3e\xe8\xcb\xff\x5f\x1f\xf8\x17\x3d\xa3\xdc\xf0\x50\x98\xc7\xb9\x4f\xf2\xae\xa0\x4b\x31\xf1\x73\x1a\xb5\x37\xc9\x35\x7d\xee\x29\xac\x19\xd6\x5d\xd9\x74\x77\xfe\x60\xe6\xcf\x9f\xf2\x78\x34\xb5\x84\x15\xd7\xb9\x6e\x81\xba\xd7\x6a\xb1\xed\x46\x9a\x46\x8c\x27\x71\x73\xfe\x60\xa7\x45\x61\xad\x39\x8e\x66\xf1\xd4\x28\x45\x6c\x71\x30\x9a\x15\xb4\xd9\xbb\x2a\x62\x90\xdf\x51\x7f\x12\xcf\x09\xb0\xc0\x55\xb3\x07\x76\x6a\x0f\x6a\x5c\xef\x52\x45\xed\x14\x2d\xcc\xee\x05\x75\x68\x46\x33\x25\x6a\xd5\x39\xd0\x6b\x49\xe1\x9c\x06\x03\x2f\x03\x74\x09\x9d\x34\xcf\xa4\x17\x7b\x9d\x32\xe2\x8a\x6f\x4a\xe6\xf1\xb2\xdf\xb6\x2d\x45\x34\x92\x65\x44\x5e\x0b\x9e\x14\x90\xa7\xc2\xfe\xa8\xbb\x52\xc5\xeb\x34\x8b\x6e\x53\x22\x4c\x83\x17\x25\xe9\x99\xf7\x51\x3f\x1d\x58\xe7\xbe\xe1\x63\x5e\x84\xc0\x81\x9c\xa6\xa4\x79\xe9\xcd\x4f\x07\xce\x6b\x05\x65\xec\xdf\x34\x23\xd5\x14\xcd\xd0\x07\x12\xa5\x7c\x3e\x9c\x93\x78\xe1\x56\x65\xd4\xd0\xea\x7a\x0e\xde\x65\x4e\xd3\xa9\xbc\x14\xb0\x37\x6b\x24\x76\xfa\x5e\x5e\x7d\xff\xe8\xd4\x2e\x8a\xbb\xf0\xfd\xa5\xaa\x00\xe0\xeb\xe1\x95\x75\xcb\xd8\x16\xde\xab\xe3\xfa\x2e\x29\x18\x17\x1f\xaa\x90\x1f\xba\xe1\x34\x14\xf7\xc6\x7a\xfe\x31\x9b\x07\x17\xd3\xe4\xf6\x86\x4a\x44\x13\x0a\xc9\xfc\xc2\xc7\x96\x1e\xd5\xb6\xda\x67\x49\xc5\x5d\xc7\x17\xb8\x57\x37\x1d\xb2\xd4\xad\x4f\x62\x3a\x84\x97\x76\xcd\xd2\x36\xc4\x45\x4c\x4c\xb6\x90\xac\x26\x7d\x0e\xa9\xb4\x75\x38\xb3\x78\x12\x3a\xfb\xf4\x84\xe2\x83\xbf\x20\x7f\x7f\x9c\x1d\x9a\x4c\xce\x02\xaf\x7d\xf3\x3d\x6a\xd9\xa5\x56\xe9\x5e\x62\x9f\x82\x13\x81\x04\x86\xfd\x3b\x51\xf3\xe9\xa5\x27\x6f\xca\x80\x14\xff\xe3\x7b\x18\x3e\x69\xff\xd7\x7b\xe8\x3c\xb9\x71\xbb\xa4\x9e\x1b\xcf\xb5\x74\x51\xed\x14\x26\x9e\x5e\x51\xdc\x26\x46\x58\xcd\x5c\x0a\x75\xd8\xf5\x86\x50\x7b\x9b\x7c\xa9\xc2\x9b\x16\xb9\x31\x14\xea\x67\xe3\xbc\x48\x6e\x4b\xae\x14\x14\x3a\x4e\xcd\x05\x0a\xee\x12\x43\x12\x57\x59\x27\x16\x18\x06\xfb\x06\x70\xd3\x11\x5a\x94\x20\xcf\x61\xf0\x5e\x63\x59\x20\xba\x74\xde\x2c\xbc\x80\x49\x9e\xbd\x1d\x52\xba\x48\xc8\x04\xd2\x81\x85\xb8\xc7\x67\x35\xce\x14\x0b\xb7\x0d\x20\x9a\xc9\xab\x22\x71\x39\x6a\xf1\x70\xd2\x78\x95\xe6\x87\xb2\xfb\xb6\x84\x34\x50\xce\xee\x48\x32\x9a\x9b\x56\x23\x0b\xea\x2a\x11\x04\xbf\x22\xa1\x3a\x1c\x54\x17\xdc\x87\x88\x8d\x35\x8d\x99\x3b\x89\x73\x77\x59\x58\xa7\x76\x53\x31\xde\x6e\xab\x03\x74\x5e\xb2\x7d\x02\x09\xd7\xfe\x21\x24\x47\x26\xec\x7f\x24\x8f\xcf\x04\x78\x1c\x09\x1e\x9a\x85\x50\x41\xe7\x5a\xbd\x66\x8e\x6a\x85\x81\xc6\xf3\xc0\x8d\xed\xd8\x20\xd3\x99\x66\xfd\x25\x17\x3c\x08\x29\x4e\x53\x05\xaf\x75\xdb\x9a\x42\x9e\x7a\x9d\x6b\xdc\xab\xb6\xd5\x47\xf6\x2a\x63\x69\xed\x19\xf1\x3b\xc9\x6c\x85\xa9\x88\xf4\x28\x1d\x78\x55\x3a\x29\xd6\x71\x1c\x8b\xbb\x61\xe0\x67\xf4\xbe\x6c\xda\x96\x47\xcf\xe6\xaa\x2f\xc0\xbc\x67\x7e\xf5\xc0\x2c\x67\xb6\xea\xc7\xe9\x08\xb4\xae\x83\xc3\x0d\x3b\x6e\xe7\x76\xcb\xf6\x6f\xd5\xb1\xdd\xda\x88\xed\xb4\xc2\x36\x5d\xd1\x6e\xf1\xc7\xe9\x91\xb6\x1d\xab\xd3\xf7\xba\xb9\x8d\xdb\x6e\xe1\x76\xe7\x31\x1a\xba\xfd\xf0\x42\x62\xe6\x74\x77\xbb\x28\xc4\xae\x28\xed\x85\x7e\xbf\x09\xb7\x4f\x18\xfd\xd1\x95\x73\x6c\x6a\x31\x5e\x63\x77\x18\x8e\x58\x09\xbd\xed\xfe\xcd\xfd\xee\xf9\x64\xed\x7d\xf6\xcf\xdf\x42\xdf\xba\xc9\x72\x94\xa8\xf2\x96\xf8\xe6\xd0\x6d\x5d\xde\x52\xf5\xd5\x5b\xf2\x43\x18\xe5\xb6\xbc\xa3\x7c\x02\x29\x2a\x54\xc0\x44\x99\x32\x58\x28\xeb\xe6\x36\x76\x79\xfd\x92\xf0\xf9\x16\xbc\xe2\xa3\x4e\xe1\x81\xe4\xb8\xe4\x73\x5a\x24\x5f\x49\xb0\xd4\xeb\xbd\x15\x82\x3e\x46\x3b\x7c\x50\xaf\x3f\x04\xd8\xb8\xb8\x66\xaf\x6d\xb4\x19\x31\xc3\x57\x87\x4b\x36\xfb\xab\x44\x58\xdf\x54\x2a\xe9\xd7\x48\xa1\x69\x31\xd2\x4e\xa9\xb2\x60\x81\x2b\xec\xc6\x27\x3c\x5a\x46\x77\xf5\x98\xfc\x60\x0c\x0e\xe9\x72\x19\x65\x53\x05\x68\xee\x85\x7b\x15\x9d\x23\xf2\x99\xba\x52\xab\x31\x0d\x6e\x3a\x66\x03\x15\x2a\xbb\xab\xb6\x2e\xd9\x86\xbf\xf6\xd7\x34\xcb\x2c\xc8\xaa\x87\x5e\xa9\x79\x55\x1b\xf1\x3d\x64\x07\x56\x9d\x50\xdc\x60\x00\x99\x2e\xf6\x56\x42\xea\x77\xd6\x66\x1f\xba\x05\x14\xdb\xe7\x38\x4b\xb2\xc5\xa7\xa8\x60\x1b\x67\xe9\xe4\x8f\x7f\x1e\x5d\x9c\x4e\x46\x13\x1c\x6e\x5e\xad\x5d\xd0\xd9\xe5\xfb\xdf\xde\x8f\x2f\x3f\x5e\xe1\x96\x76\xd5\xc6\x59\x8d\x2f\x87\xa7\x93\x89\xbb\x8b\x0d\xf8\x13\xae\x90\xa6\xe0\x81\x4c\x7f\xd6\xa4\x56\xe7\x22\xe2\x8a\xfc\x45\x13\xb9\xeb\xeb\x9b\x29\x91\xa7\x2e\x25\x1a\x6a\x01\xd5\xfa\x2c\x55\x0e\xd2\x12\x60\xbb\x37\xcd\xc4\xcf\x16\xdf\x6b\x3b\xed\xce\x16\xc3\x15\xd4\x60\x8a\xf0\xe0\xb7\x85\x6d\x97\xb4\xfb\x4d\x54\x4d\x70\x32\x81\xd9\x8e\x9a\x14\x35\xf9\x24\x25\x77\xb2\xc6\x2d\xe7\x6a\x9e\xe8\xc9\x14\xe2\x6f\x65\x07\xde\xa5\x0d\x1a\x9b\xdf\x5c\xf0\xbf\x1f\x60\x23\x98\xc9\x9b\xc1\x40\x7f\xb5\x46\x8b\x76\x42\x52\x22\x82\x4f\x9d\x27\x81\x04\x42\x0b\x1d\x10\x27\x16\x69\xa2\x50\x58\xa1\xca\x2d\xee\xe5\x04\xbe\x8e\xee\x98\x9b\x62\xa8\xc6\x54\xcc\x56\x10\x36\x96\x02\xb1\xd5\x09\xad\xfe\x36\x0f\xb2\xd3\x09\x4d\x2f\xbe\x88\xd7\x6b\x45\x9f\x26\x28\x0e\xf9\x62\x43\x6b\xff\x0d\x00\x00\xff\xff\x8d\x2c\x6a\x82\x1a\x3f\x00\x00")

func templatesAppTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesAppTmpl,
		"templates/app.tmpl",
	)
}

func templatesAppTmpl() (*asset, error) {
	bytes, err := templatesAppTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/app.tmpl", size: 16154, mode: os.FileMode(420), modTime: time.Unix(1458690820, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templatesServiceMysqlTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x57\x5b\x6b\x2b\x37\x10\x7e\xcf\xaf\x10\xfb\xd4\x82\xeb\x3a\x3e\x34\xa5\x4b\x29\xf8\x38\x17\x16\x9a\xd4\xc4\x69\x0a\x2d\x79\x90\x57\x63\x23\xba\x96\x74\x24\xad\x0f\x3e\x61\xff\x7b\x47\x7b\xd7\x5e\xec\x24\xd0\x5c\x8c\xd1\xcc\x37\xf3\x69\x34\xf3\xad\xf6\xf5\x95\x30\xd8\x72\x01\x24\x30\xa0\x0f\x3c\x86\x80\x64\xd9\x05\x21\xaf\xf8\x4f\x48\xb0\xf8\x6b\xfd\x04\x7b\x95\x50\x0b\xb7\x52\xef\xa9\x7d\x06\x6d\xb8\x14\x01\x09\x49\x30\x9f\x5d\xce\x7e\x98\xfd\x82\x7f\xc1\xa4\x70\x5f\x4a\xc1\xb8\x45\xbb\x09\xc2\x32\x04\xae\xae\x34\x3f\x60\x00\xb7\x44\x82\x5b\x11\x86\x37\x5f\x52\x9a\x38\x97\x7f\xdc\xca\x23\x6c\xf1\x6b\xed\x45\xb2\x09\x09\xac\x4e\xf1\xdb\x0b\xc9\xf2\x18\x59\x19\x7e\x45\x35\xdd\x83\x45\x0a\xed\xf0\x8b\x24\x91\x31\x22\xd9\xda\x4a\x4d\x77\xd0\xb2\xa1\xf5\xe9\xa8\x20\x67\xfb\x90\xee\x37\xa0\x4b\xa6\xb9\xe9\x1a\xb6\x34\x4d\x6c\x6e\xbd\x9c\xf9\x16\x13\x6b\xae\x6c\xb5\xd3\x3a\x05\x31\x45\x0e\x62\xf8\x37\x20\xdf\xdd\x7d\xfe\x3e\x28\x51\x59\x05\x0f\xae\xa9\xa5\x1b\x6a\xc6\x78\xac\xad\xe6\x62\x37\xc6\x83\x2a\x75\x8a\x48\xe9\x4a\x58\x99\x83\x08\x2c\x48\x9f\x42\x24\x8c\xa5\x22\x86\x3c\xe9\x47\x68\xb0\xcd\xd4\xce\xa7\x7b\x1e\x6b\x79\x8a\x4e\x95\x87\xc4\x09\x35\x86\x6c\xa5\x6e\x31\x93\x0c\x4c\x9f\xda\x3d\xa6\xe0\x8b\xbf\x3f\xc4\x6a\x8b\x5d\x03\xa7\xf8\xe4\xc1\x55\x02\x84\x1e\x28\x4f\xe8\x86\x27\xdc\x1e\xc9\x37\x29\x06\x6a\xb4\x42\xc6\x5f\xa5\x66\xef\x60\xe2\x27\x5b\xe3\xc0\x80\x26\xaa\x8a\xd3\xcf\xd0\xf4\x7d\x27\xc1\xd9\xf8\xe8\xb0\xd4\x80\x60\xc2\x05\x51\x45\x1c\x62\xd2\x8d\x00\x6b\x86\xaa\x33\x54\x1c\xd7\xb4\x5f\x81\x3d\xd3\x24\x85\x62\xd8\x8a\xb1\x9a\x54\xbe\xe4\xa5\x47\x79\x5d\xa6\x18\xa4\xfc\x3b\x37\xf6\x57\x54\x04\x1c\xe0\xe5\x3c\x0c\x0b\xdf\x30\x8c\xd8\x6f\x27\xb6\xf1\xbc\x5a\xd6\xc4\xc7\xd2\x8d\x17\x8a\xbc\x23\x6d\xd3\x27\xa7\x4e\xcd\xf1\xe9\x16\xb4\xc7\xeb\x4f\x14\xc3\x7c\xb2\xfe\x87\x11\x2e\xdb\x26\xad\x52\xf4\x92\x3f\xab\x78\xb8\xfe\x4d\x0d\x70\x13\xae\x00\xa7\xcb\x5e\x47\xf6\x34\xf4\x8f\xd4\xaa\xd4\xfa\xfa\x2c\xb5\xfd\xf4\x69\x76\xf5\x14\xab\x05\x63\xba\xd0\xe9\xbc\x6d\x1a\xc9\xbe\x03\xbb\xb0\xb6\xe8\xa2\x6a\xea\x5d\x27\xdd\x08\xa6\x24\x17\x76\xea\x90\x60\x4c\x2e\xda\xed\x19\x68\x62\xbb\xaf\x1f\x8b\x9d\x23\x3b\x81\x6f\xc4\xe1\xfe\x68\xbe\x24\x6d\xb5\xf5\x22\x97\x8f\x95\xda\x3e\x88\x6e\x8b\xc0\x10\xba\xb6\x0f\xa2\xdb\x6d\x32\x84\xae\xed\x0e\xed\x9d\xc2\x23\x18\x99\xea\x18\xbc\x73\x58\x43\x9c\x6a\x14\xac\x3b\x2d\x53\x75\xae\x05\x7c\xe7\x56\x23\xac\xb4\x54\xa0\x2d\x07\x7f\x8a\xd1\x92\xbb\x76\xfa\x64\xef\xf6\x41\xaa\x67\xff\xa4\xed\xee\x65\x88\xc4\x2e\x3f\x5e\x3c\xa4\x96\x0f\x71\x9b\x8d\x14\xa6\xb4\x32\x96\x89\x0b\x68\x63\xe5\xce\xee\x56\xcb\x7d\x79\xe0\x81\x3b\x7f\xb7\xf6\x24\xbb\x2b\x4b\xce\x74\xe4\xb6\x8a\xcf\xdf\x69\xfe\xfb\xe3\xe5\x55\x50\xd6\xaa\xf8\x79\xf1\x38\xe1\x6c\x44\xcc\xab\xb1\x9b\x96\x16\x20\x1b\xd1\x98\x73\x35\x7d\xbc\xc6\x8f\xeb\xcf\x6d\xe7\x37\xd5\xd4\x83\xbc\xa3\xb6\x39\x28\x62\xa6\x99\x82\x68\x5b\x4c\x40\x25\x86\x93\x6e\x9d\xcb\x0d\x77\x34\xb3\xd9\xe9\x88\x63\xa7\x9c\x27\x6b\x55\x4f\xdf\xd9\x42\x35\x73\xfa\x96\x2a\x0d\x5d\xd1\x6a\x9e\x3d\xa3\xbf\xa5\xa0\x49\xb6\x74\xb7\x0c\x0f\xeb\x5d\x74\x46\x71\x11\x03\x61\xf9\x96\x83\xf6\x13\xbb\xfd\xac\x2d\x8d\xff\x7d\x28\x86\xb4\x03\x7f\xa8\x47\xbb\xaf\x25\x93\xd1\x26\xe8\xa1\xda\x3d\xd5\x01\xde\x88\x1d\xde\xbd\xeb\x5e\x09\x06\x8c\xd5\x85\x1b\x7d\x7e\x9a\x5e\x4d\xe7\x3f\xfb\x4e\xf7\xd4\xe0\x7d\xd8\x17\xa2\xbe\xfa\x8c\x40\x7c\xf5\xeb\x4b\x9e\x0f\x6b\x2e\x6e\xb5\x6f\xb5\xd6\x71\xf5\xc7\xdc\xb3\xa4\x9b\x84\xc7\xc9\x71\x11\xa3\xf6\x19\xbe\x49\x60\xe8\xea\xe2\x06\xa4\xe8\x85\xaa\xf5\x76\x6a\xee\xdb\xf1\xf9\xe6\xe9\x53\xf7\x6d\xc2\x97\x47\xd4\xdf\x97\x7e\xdb\x5f\x54\x9f\xd9\x05\xbe\x07\x81\x60\xee\xd5\xe7\xbf\x00\x00\x00\xff\xff\xd2\x47\x25\x87\x12\x0d\x00\x00")

func templatesServiceMysqlTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServiceMysqlTmpl,
		"templates/service/mysql.tmpl",
	)
}

func templatesServiceMysqlTmpl() (*asset, error) {
	bytes, err := templatesServiceMysqlTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/service/mysql.tmpl", size: 3346, mode: os.FileMode(420), modTime: time.Unix(1458336181, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templatesServicePapertrailTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xc4\x56\x7f\x6b\x1b\x39\x10\xfd\xbf\x9f\x42\x88\x42\xa1\x38\x4e\x9c\x50\x8e\x13\xdc\x1f\xbe\x34\x69\x7d\x75\x12\xb3\x4e\x7b\x70\x25\x1c\xca\xee\xd8\xd1\x79\x2d\x2d\x92\x36\x4d\x1a\xfc\xdd\x6f\x24\xed\x7a\x7f\xc6\x0e\x81\xe3\xa0\x6e\x58\xe9\x69\x34\x7a\x33\xf3\x66\x9e\x9e\x48\x02\x0b\x21\x81\x50\x03\xfa\x5e\xc4\x40\xc9\x66\xf3\x86\x90\x27\xfc\x11\x42\xc7\x7f\xce\xaf\x61\x9d\xa5\xdc\xc2\xb9\xd2\x6b\x6e\xbf\x81\x36\x42\x49\x4a\x18\xa1\xc7\x47\xa3\xa3\x83\xa3\x5f\xf1\x1f\x1d\x04\xf8\x8c\x6b\xbe\x06\x8b\x18\xca\x0a\x13\xb8\xfa\x55\xa7\xb5\x4f\x5c\xb8\x7e\xcc\xc0\x5b\x98\x5b\x2d\xe4\xb2\x38\xed\xb7\x3e\x82\x89\xb5\xc8\x6c\x79\xc7\x8c\x67\xa0\xad\xe6\x22\x25\x5f\xa3\xe9\x80\xc0\x70\x39\x24\xef\x52\xb5\x34\xa3\x61\xb6\xdd\xe3\x59\x36\x8c\xd5\x9a\x8d\x46\xc7\x27\x1f\xde\xd1\xc2\xdc\xc6\xff\xdd\x14\xbe\x45\x60\x54\xae\x63\x68\xb8\x36\xe5\xeb\xdb\x84\x9f\x3d\x40\x9c\xbb\x2b\x23\x95\x42\x8f\xab\xcc\x13\xc1\xd8\x64\x7c\xc1\x98\xc7\xd4\x3c\x9e\x69\xe5\xdc\x10\x0d\xc3\x81\x3c\x63\xf2\x35\x38\xfc\x4c\xa5\x22\x7e\xfc\xa8\x62\xfc\x96\xb6\x85\x43\x64\xc9\x6a\x20\xf5\xf8\x00\x79\x1d\xfd\x52\xbb\xc4\x83\xe6\x16\xa3\x50\x9c\xff\xde\xd8\x22\x2d\x7b\x1e\x7e\xb6\x58\x40\x6c\xbd\xef\x69\xaa\x7e\xb4\xac\x15\xae\x0b\x19\x8b\x8c\xfb\xf0\xe0\x05\x45\x06\xa0\x79\x42\x53\xcf\xcc\x90\xaf\xf9\x4f\x25\xf9\x0f\xe3\xf8\xa5\xe4\xa6\xa4\xb3\x61\x67\x1c\xdb\xe0\x3d\x9e\x33\xd6\xb0\xea\xe1\x78\xa2\x05\xdf\x34\xbe\xeb\xbb\x0d\xcb\x18\x78\x7b\xe7\x9c\x3f\xa4\xcd\x65\xc7\x64\xe0\xba\xc9\x41\x9b\x81\x80\x7c\xbc\xc4\x7c\x74\x66\x42\xa0\x4f\x53\x95\x27\x21\x91\xd1\xe1\x2f\x98\xf7\x46\x98\x0e\x33\x74\x4f\xb8\x3c\xe6\x25\x21\xf3\xc0\x5d\x61\xeb\x73\xbc\x38\xb6\x3f\x7c\x1e\x56\x51\xdf\xbb\x4f\xca\x40\xb2\x89\xbc\x57\x2b\x38\xcf\x65\x38\xd0\x8b\xbe\x79\xe6\x92\xb2\x74\x76\x5d\xf3\xfe\x19\x93\x3d\xab\x3d\x29\xf4\xdf\xd3\xb0\x0a\xc1\x66\x9f\xc0\x46\x10\x2b\x9d\x74\xe3\xde\x87\x9d\xdf\x71\x9d\x4c\x50\xd1\xb8\x55\x7a\xff\x89\x20\x5f\xb7\x80\xc2\x06\x7c\xbd\x1f\x3f\x15\xc6\x06\xec\x0e\x77\x9c\xda\xb1\x53\x04\x59\x98\xaa\xe5\x27\xad\xf2\xec\xa5\xe0\x7d\x7e\x78\xf4\x2c\xb7\x08\x3d\xbb\xc7\x1c\x35\xaf\x4e\x8c\xfe\x04\xf8\x5f\x42\x1d\xbb\x2a\x5f\x94\x55\x5e\x8b\x09\x8f\x57\xaf\x7f\x20\x0a\xe4\xb9\x64\xec\x0f\x25\x0a\xa5\xa3\x03\xf7\x3f\xd7\x92\xa1\x3c\xb2\xd6\xa5\xb8\xf9\xe4\x8e\x2f\xb6\xcd\x23\x82\xa5\x6f\x6a\x9b\x01\xa1\x3d\xdb\xe3\x38\x56\xb9\xb4\x93\xa4\x40\x18\xe7\xed\xa1\xc3\x79\x18\x29\x71\xfe\x15\x5e\xd5\x1c\xec\xf0\xbd\xd3\xe4\x9b\x96\xaa\x16\xdc\x77\xd6\x76\x6b\x71\xfd\xab\x42\x96\xab\xdb\x48\xe2\xc8\xa0\xb9\x5c\x02\x79\xbb\x1a\x90\xb7\xf7\x84\xfd\x46\x86\xe3\xe8\xd2\x84\xb9\xa1\xe0\x0d\x41\x79\x86\x6d\x11\x41\xb8\x7e\x81\xfd\xd9\xf5\xf9\x56\x7f\xdc\x8e\x01\xfe\x61\x41\xa1\x19\xf3\x79\x38\xf7\xac\x97\xe7\x9a\x1d\xa0\xea\xb7\xa4\xd3\x48\xcf\x24\xbf\x4d\x21\x71\x3b\x56\xe7\xd0\xea\xa0\x35\xd3\x63\x1d\xe6\x0b\x74\x14\xdf\xb0\xd9\xb4\x9b\x6d\x29\x94\x9e\x69\xb2\x8d\x3e\x2a\xc2\xd8\x5a\xb7\xf0\xbd\x36\x9a\x60\xf5\x2c\x01\xd5\x01\x5f\x82\x66\x3b\x3d\xd2\xb5\x00\x74\x58\x2e\x67\xca\x88\xed\x64\x73\x1d\x4d\x2e\xfe\xfe\x7c\x15\x4d\xfe\xba\xba\xac\x27\x65\xc5\x62\x9d\x72\x90\x49\x45\x70\xf7\xea\xe7\x67\x96\x92\xd6\xad\xf2\xbf\x68\x74\xf9\xcc\x65\x92\x7a\xbb\x54\xc8\x04\x1e\x86\x77\xc5\x42\x23\x14\xe5\xb8\xd4\xe5\xa6\x6f\xae\xea\xa7\x87\x9e\xaa\x04\xba\x13\xd1\xfc\xe4\xf7\x3c\x5e\x81\xed\x2b\xbc\x83\x50\x79\xb1\xc2\x96\xf6\xb0\xa3\xd0\x42\x65\xb4\x63\x71\xf2\x05\x1e\x1d\x36\xf4\xc5\xc3\x6a\x88\x1c\xfe\x14\x19\x7d\x76\x1e\x89\xb0\x38\x45\x98\x25\x24\x7a\xfc\x4f\x53\xaf\xe9\x35\xee\xa9\xdc\xab\xd7\xf1\x07\xda\xad\x9e\xc6\x28\x7a\x95\xdb\x2c\xb7\x75\xd2\x5f\x51\x54\x53\x21\x57\xed\xb0\x7d\xe3\x69\xee\x5d\xdc\xa6\xf5\x0b\x92\xa9\x33\x9e\x97\x56\x2a\x5e\x1d\xa4\xfd\x96\x37\xee\x57\x19\xfb\x37\x00\x00\xff\xff\xcd\x2b\x5b\x59\x4a\x0c\x00\x00")

func templatesServicePapertrailTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServicePapertrailTmpl,
		"templates/service/papertrail.tmpl",
	)
}

func templatesServicePapertrailTmpl() (*asset, error) {
	bytes, err := templatesServicePapertrailTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/service/papertrail.tmpl", size: 3146, mode: os.FileMode(420), modTime: time.Unix(1454625854, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templatesServicePostgresTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x57\x6d\x6f\x22\x37\x10\xfe\x9e\x5f\x61\xf9\xcb\xb5\x12\xe5\x48\x7a\xa9\x74\xa8\xaa\x44\x20\x89\x90\x9a\x14\x85\x34\x95\x5a\x45\x95\xd9\x1d\x90\x75\x8b\xed\xda\x5e\xee\xb8\x88\xff\xde\xf1\xbe\xdb\xbb\x0b\x49\x48\x42\x60\xe7\xed\xf1\x78\xe6\xb1\xe7\xe5\x85\xc4\xb0\xe6\x02\x08\x35\xa0\x77\x3c\x02\x4a\x0e\x87\x33\x42\x5e\xf0\x8f\x10\x3a\xf9\x6b\xf9\x08\x5b\x95\x30\x0b\x37\x52\x6f\x99\x7d\x02\x6d\xb8\x14\x94\x8c\x09\xbd\x18\x9d\x8f\x7e\x1a\x7d\xc6\x5f\x3a\xc8\xd5\xa7\x52\xc4\xdc\xa2\xdc\xd0\x71\xe1\x02\x9f\x5e\x25\x4c\x7c\xb9\x63\xdf\x50\x2a\x20\xaa\xc4\x84\xde\x88\xf1\xf8\xfa\xbf\x94\x25\xee\xfb\x3f\xee\xc9\x03\xac\xf1\x23\x0d\x94\xc9\x61\x40\x28\x25\xcf\xf8\xbf\xf4\xb9\xd0\x7c\x87\xa0\x4e\xf8\x29\xb5\x32\x07\x56\xa7\x90\x39\xc9\x7c\x14\xae\xe8\x82\x69\xb6\x05\x8b\xcb\x6a\x42\x9e\x24\x89\x8c\xd0\x32\x5e\x5a\xa9\xd9\x06\x1a\x32\x94\x3e\xee\x15\x64\x19\xb8\x4f\xb7\x2b\xd0\x74\x50\x8b\x66\xb0\x66\x69\x62\x33\xe9\xf9\xc8\x97\x98\x48\x73\x65\xcb\xec\x55\x21\x88\xc9\x63\x10\xc3\xbf\x03\xf9\xe1\xf6\xea\x47\x5a\x58\xd5\xcb\x9d\x31\xcb\x56\xcc\xf4\xe1\x58\x5a\xcd\xc5\xa6\x0f\x07\x53\xea\x18\x90\x42\x95\xc4\x45\x0c\x22\x30\x21\x6d\x08\x73\x61\x2c\x13\x11\x64\x41\xdf\x03\x23\x5e\x0d\xed\xc5\x70\xcb\x23\x2d\x8f\xc1\x29\xe3\x90\x28\x61\xc6\x90\xb5\xd4\x0d\x64\x32\x06\xd3\x86\xd6\xae\xad\x37\x83\x3b\x86\xa8\x2a\x91\x5b\x2d\x53\x45\xb6\xec\xdb\xbf\x51\x1d\x8e\xec\x58\x92\xc2\x80\xf0\x21\x0c\xc9\x87\x97\xd9\x55\xb9\x80\xa9\xc3\x7f\x07\x5b\xa9\xf7\x1f\xcf\x2f\x47\xd9\xeb\xf0\xa1\x03\x3d\x62\xe0\x93\xbf\xdf\x05\x7b\x8d\x35\x0f\xc7\xb0\x67\xce\x55\x02\x84\xed\x18\x4f\xd8\x8a\x27\xdc\xee\xc9\x77\x29\x3a\x76\x78\x81\x78\xbf\x4a\x1d\xbf\x01\x89\x1f\x6c\x89\x14\x02\x9a\xa8\xd2\x4f\x3b\x42\xdd\xb5\x41\x80\x93\xfe\x51\x61\xaa\x01\x8d\x09\x17\x44\xe5\x7e\x88\x49\x57\x02\xac\xe9\xca\x4e\x57\x72\x5c\xcb\x7d\x85\xf8\xc9\x6d\x58\x4e\x15\x39\x29\x0c\x4a\x5d\xf2\xdc\x82\xbc\x2c\x42\x74\x42\xfe\x9d\x1b\xfb\x2b\x72\x24\xd2\xcf\xf4\x62\x3c\xce\x75\xc7\xe3\x79\xfc\xdb\x91\x65\x3c\x2d\xa6\x15\xf0\xbe\x70\xfd\x89\x22\x6f\x08\xfb\xba\xf2\x76\x78\xc2\x84\xb6\x70\xfd\x89\xc7\x43\xc6\x0b\xef\xa9\x52\x25\x8d\xdd\x68\x30\xaf\xa8\x9d\xb4\x8c\xd3\x42\xf0\xa4\xa2\xee\x4d\xa8\x13\x81\x2b\x71\x59\x38\x9e\xfb\xca\xb3\x77\x0c\xfc\x91\x5a\x95\x7a\xdb\x4c\x17\x52\xdb\xcb\x4f\x3f\x5f\x3c\x46\x6a\x12\xc7\x3a\x3f\x6a\xb2\xda\xa9\x4f\x9d\x5b\xb0\x13\x6b\xf3\x52\x2a\xfb\xde\x95\xd3\xb5\x88\x95\xe4\xc2\x0e\x9d\x25\x18\x93\x9d\x3b\xcd\x46\xa8\x7d\xbb\x8f\xef\xf3\x9d\x59\x06\x8e\xaf\xc5\x6e\x51\x64\xbb\x79\x66\x78\xce\x8b\xc3\xb1\x92\xf7\x39\x68\xf2\x41\x97\x83\x4a\xde\xe7\xa0\x59\x34\x5d\x0e\x2a\xb9\x73\xe0\x6d\xc7\x03\x18\x99\xea\x08\xbc\x0d\x59\x42\x94\x6a\xa4\xaf\x8c\x86\x4f\xd5\x82\xaf\xdc\xa8\x88\x85\x96\x0a\xb4\xe5\xe0\xf7\x34\x4a\x32\xd5\xa0\x60\xca\xd2\x25\xe5\xf5\x68\xd0\xb4\xf0\x82\xcc\xc5\x26\xdb\x6a\xdc\xb0\x86\x0e\x71\xeb\x9d\x2b\x8c\x6a\x65\x24\x13\xe7\xd3\x46\xca\xed\xe3\x8d\x96\xdb\x62\xf3\xa9\xab\x05\xf7\xec\x51\x86\x4f\xa6\x3c\xd6\x73\xb7\x5a\xbc\x4e\x0c\xb3\x9f\x8f\xe7\xbf\xd0\x22\x5d\xf9\xeb\xd9\xc3\x84\x7d\x32\x8f\xbd\x34\xbb\xce\x69\x18\x1c\x7a\x48\xe7\x54\x5a\x1f\x66\xf8\x36\xbb\x6a\x2a\xbf\x2a\xad\x9e\xc9\xdb\xd2\x9b\xd9\xcd\xe3\xc6\x75\x71\xbe\xce\x1b\xa2\x24\xc8\x41\x98\xea\x62\xcd\x01\x8f\xd6\x8b\xed\x51\x0c\x32\x7a\x34\x5d\x55\x33\x9e\xcc\x55\xdd\xb6\xaf\x49\x54\xd7\xa5\xb3\xc2\xd9\x12\xfa\x4b\xa2\xc1\xbd\xc3\xb3\xf5\xae\x6e\xbd\x76\xf3\x18\x84\xe5\x6b\x0e\xda\x0f\xec\xd6\xb3\xb4\x2c\xfa\x72\x9f\xb7\x6a\x60\x7e\x5f\x35\x78\x9b\x57\x02\x55\xff\x22\xd5\x32\xf4\xc5\x6d\xf3\x46\x19\xb5\x6c\x9b\x55\x19\x18\x5e\x8b\x0d\x0e\x38\xb4\xfb\x1c\xaa\xe4\xe5\x60\x83\x6a\x9f\x87\x9f\x86\x97\xbe\xce\x1d\x33\x88\xcb\xe7\xb3\x36\x89\xf5\x98\xf8\x3c\xda\x26\x4f\xdf\xac\xbe\x0d\xd6\xe3\x50\xf1\x2c\x50\xf5\xa9\xc2\x93\xa4\xab\x84\x47\xc9\x7e\x12\x21\x85\x1a\xbe\x4a\xa0\xeb\x3e\xe4\x3a\x2c\x2f\xa6\xb2\x76\x37\x2a\x70\x84\xe7\xa5\xc7\x71\xe1\x80\xe5\xb3\x2c\xd2\xf8\xf3\x91\xbe\x09\xf6\xf7\x64\xf7\x04\xfa\xdd\x3d\x44\x42\xb6\xf1\xef\x15\xa7\xcb\xf2\x86\x6d\x79\xb2\xf7\xee\x29\x58\x00\x41\x3e\xeb\x21\x31\x88\x87\xc2\x60\x1e\x68\x73\x55\xd7\xfc\x3b\x08\x3b\xec\x5e\xe6\xe7\xa3\x1b\x55\x8f\x0c\xc2\x1e\x35\x91\x2e\x9a\x3a\x2b\xdf\x0f\x67\x38\xdd\x83\x88\xdd\x40\xff\x7f\x00\x00\x00\xff\xff\x46\xad\xef\x32\xe8\x0f\x00\x00")

func templatesServicePostgresTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServicePostgresTmpl,
		"templates/service/postgres.tmpl",
	)
}

func templatesServicePostgresTmpl() (*asset, error) {
	bytes, err := templatesServicePostgresTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/service/postgres.tmpl", size: 4072, mode: os.FileMode(420), modTime: time.Unix(1458336181, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templatesServiceRedisTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x56\x51\x6f\xdb\x36\x10\x7e\xcf\xaf\x38\xe8\xd9\xf5\x1c\x77\xe8\x56\x63\x1d\x60\xb8\x4e\x61\x60\xcd\x0c\xdb\xcb\x80\x0d\x79\xa0\xc9\xb3\x4d\x4c\x22\x35\x92\x4a\x16\x04\xfe\xef\x3b\x52\xb2\x2c\x4a\xb6\x93\x06\x6d\x93\x40\xd0\x1d\xef\xbe\xfb\xee\xe3\xe9\x9e\x9f\x41\xe0\x46\x2a\x84\xc4\xa2\x79\x90\x1c\x13\xd8\xef\xaf\x00\x9e\xe9\x17\x20\x19\xff\xb9\x5c\x61\x96\xa7\xcc\xe1\x8d\x36\x19\x73\x77\x68\xac\xd4\x2a\x81\x11\x24\xc3\xc1\xf5\xe0\xdd\xe0\x23\xfd\x24\xbd\xd2\x7d\xa2\x95\x90\x8e\xec\x36\x19\x55\x21\xe8\xed\xdc\xc8\x07\x0a\xe0\x5f\x41\x72\xa3\x46\xa3\xe9\xbf\x05\x4b\xbd\xcb\xdf\xfe\xcd\x02\x37\xf4\x58\x7b\xc1\xbe\x07\x89\x33\x05\x3d\xdd\xc3\x3e\xc4\xd8\x57\xe1\xe7\xcc\xb0\x0c\x1d\x41\x68\x86\x1f\x17\x4e\x13\x32\xc9\x6f\x98\x4c\xf5\x03\x9a\xa9\x62\xeb\x14\x45\xc3\x87\xbc\x56\x4f\xb9\x47\x90\x2c\x9d\x91\x6a\x5b\x01\x0e\x96\xcf\xb8\x61\x45\xea\xbc\x71\x43\xb0\x30\xb6\x59\x6e\x64\xee\x4b\xf2\xf6\x19\x95\xc7\x09\xa4\x85\xc7\x1d\xba\x1d\x1a\xf8\x4a\x27\xe5\xbb\xf1\x5f\x20\x2d\x60\x99\xb7\x4f\x2f\xad\x83\x35\x02\xe3\x5c\x67\x39\x53\x12\x05\x3c\x4a\xb7\x83\x99\xb2\x8e\x29\x8e\x1e\xcc\x27\xce\xf8\x0e\xfb\xd9\xfb\x7e\x86\x42\x16\x19\x68\x03\x3b\xb9\xf5\x41\x99\x12\x70\x5b\x64\x13\xef\x30\x49\x29\x18\x9a\x4f\xc3\xa3\xbd\x9f\x54\x00\xf7\x07\xa4\xc9\x67\xe6\xd8\x9a\x59\x3c\x51\x33\x5c\x2c\xda\x5b\x07\xe7\x2a\xf6\xc6\xca\x11\x44\x95\x01\xa4\x12\xf8\x5f\x17\x41\xb3\xb4\x37\x30\x5f\x92\xe1\x86\xfd\x4c\x72\xa3\x2f\xb4\x60\xb5\x43\x70\x14\x11\xf4\x86\xa0\x94\x39\xc1\x69\x28\xa8\xf8\x0e\xa8\x86\xf2\x5e\x87\x27\x4a\x35\x31\x48\x87\x29\x0b\xe4\x65\x1c\xb0\xc5\x5a\xa1\xb3\xaf\x55\xcf\x38\x4d\xf5\x23\x8a\x3b\x96\x16\x58\xca\xbd\x14\x76\xef\xe0\x0b\xf7\x1d\xc8\xad\xbe\xdb\x37\x70\x79\xfd\x02\x7d\xaa\xc8\xd6\xa4\x32\x22\x30\xb0\x0e\xbc\x4a\x05\x1b\x92\x98\xdb\x91\x92\x0d\xe6\xa9\x17\x3a\x1d\x82\xad\xd1\x45\xde\xa5\x76\x59\x51\x71\x12\xde\x6f\xd2\xba\x5f\x68\x76\xd0\x55\x9f\x0c\x47\xa3\xd2\x77\x34\x9a\x89\x5f\x2f\x40\xbb\x9b\x4f\x6a\x82\xcf\xa5\x3b\xdf\x50\xf8\x86\xb4\x47\xe9\x5f\x52\xbe\xc7\xd3\x6e\x7c\x07\xd7\x5d\xce\x4f\x53\x70\x84\x41\x71\x3c\x86\xcb\x95\xd7\x91\xa3\x81\xf7\x7b\xe1\xf2\xc2\xc5\xc3\x54\x1b\xf7\xe1\xfd\x4f\x1f\x57\x3c\x1f\x0b\x61\xca\xa1\x1a\x14\x76\x9c\xaf\x5f\xd0\x8d\x9d\x2b\x05\xb7\x38\xb6\xf2\x4b\xe8\x64\x2f\x5c\x8b\x8c\x99\xa7\xa9\x12\x73\x2d\x95\xeb\xfb\x40\x68\x6d\x18\xb8\xcd\xdb\x73\x4c\xe5\x1f\xbf\x4b\xaa\x10\xa8\x95\x67\xaa\x1e\x16\x34\x02\x6d\x73\x88\x45\x89\xaa\x2f\x44\x6d\xf7\xa7\x23\x9e\x16\x68\x75\x61\x38\x46\x4c\x2d\x91\x17\x46\xba\xa7\x12\xcb\x0b\x4d\x8a\x9d\x1b\xad\x9a\x1b\x9d\xa3\x71\x12\x63\xa9\x93\x25\xb8\xb6\x3a\x69\x7c\x1d\x70\xf8\x94\xf6\x9a\xee\x51\x86\x99\xda\x06\xc6\x89\xb7\x86\x0f\xf8\x62\x67\x39\xa5\x74\x9a\xeb\xd4\x07\x74\x3c\xd0\x78\x63\x74\x56\xf5\x20\xf1\x2d\xf1\xef\x56\xba\xfd\x66\x22\x85\x99\xe5\x61\x04\x0c\xfa\xe1\xff\x0f\xd7\x1f\x92\x8a\xab\xf2\xdf\x7d\x84\x89\xd4\x3b\x13\x11\xc7\x5e\xcf\x8d\x03\xfb\x8e\xe0\xc3\x70\x2a\x6f\xd6\x8b\xc4\xa6\xcc\x3a\x19\x0e\x1c\x2e\xe3\x37\xd0\xdb\x62\x76\x51\x32\x1b\xa2\x54\x33\x29\xa6\x37\x58\x66\xc2\x1e\xb5\x39\xdb\x94\xba\x3c\x0c\x8d\x5e\x9b\xea\xaa\xe6\xd6\x6c\x39\x16\x7b\xc6\xb1\xc5\xe8\x45\xba\x3a\x77\xe2\x95\x74\x75\xef\xd2\x6b\x38\xbb\xb4\x0a\xd5\x55\x9c\x75\x8a\x0b\x0f\x7e\x5f\xa5\xd2\xa6\xda\xf9\xfe\xc8\xb7\x86\x09\x8f\xd7\x7f\xc4\x22\xd7\x00\xfa\x56\x8b\xfa\xeb\x5f\x27\x8b\xd6\x82\x56\x82\xb6\x94\x6e\x69\xb9\x8b\x0e\x77\xb4\xd6\x0a\x30\x55\x5b\x5a\x5d\xeb\x7b\x97\x9c\x30\x1e\xf6\x55\xbf\xae\xf6\x7f\xee\x0f\x7f\x8c\x9d\x4e\x7d\x6d\xeb\xf4\x1d\x63\x2b\x7d\x7c\xfd\x9a\x96\x76\xf7\x62\x2d\x37\x5a\xe1\xfb\xbe\x74\x8c\xff\x13\x6a\x6f\xc5\x8f\x27\x86\x68\x2f\xcc\xf1\xc8\xa2\x99\x78\xdf\xd5\xe1\xd5\xe1\xef\xfe\x8a\x56\x7d\xa4\xbd\x92\xb6\xfb\xff\x03\x00\x00\xff\xff\xc2\x82\xfc\x2f\xf5\x0b\x00\x00")

func templatesServiceRedisTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServiceRedisTmpl,
		"templates/service/redis.tmpl",
	)
}

func templatesServiceRedisTmpl() (*asset, error) {
	bytes, err := templatesServiceRedisTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/service/redis.tmpl", size: 3061, mode: os.FileMode(420), modTime: time.Unix(1458336181, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templatesServiceWebhookTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xa4\x92\x4d\x6f\xb2\x40\x10\xc7\xef\x7c\x8a\xcd\x5e\xbc\x28\xa0\xcf\x73\x29\x37\xd3\x97\x53\x63\x8d\xa0\x9e\x71\x19\x75\x23\x30\x9b\x65\x30\x6d\x88\xdf\xbd\xbb\x4b\x51\x48\xeb\xa5\x4d\x48\xc8\xce\xcb\x6f\x66\xfe\x33\x4d\xc3\x32\xd8\xcb\x12\x18\xaf\x40\x9f\xa5\x00\xce\x2e\x17\xaf\xf1\x18\xe3\xf3\x6d\x9c\x40\xa1\xf2\x94\xe0\x05\x75\x91\xd2\x06\x74\x25\xb1\xe4\x2c\x62\x7c\x16\x4e\xc3\x49\xf8\x60\x3e\x3e\xb6\xc1\xcb\x54\xa7\x05\x90\x89\xe0\x11\xb3\xe9\xc6\xb6\xd6\xf9\xf5\x61\x9e\xc9\x87\x02\x97\x1b\x93\x96\xe5\xc1\xe5\x39\xc7\x13\x54\x42\x4b\x45\x1d\x7b\x0b\xbb\x23\xe2\x89\xad\x57\xaf\x63\x06\xfe\xc1\x67\xa3\x23\x91\xaa\xa2\x20\x38\x68\x99\xf9\x02\xcb\x33\xbe\x9b\x5f\x11\xe8\x54\x9c\x26\x36\x38\x98\xce\xfe\xfd\x1f\x71\x87\xbc\xb4\x64\xfe\x58\x57\x84\x45\x82\x4a\x8a\x5f\xf5\x31\xa4\x2d\x90\xe4\x5e\x8a\xd4\xba\xff\xcc\xf4\xbe\xb8\x7c\x05\x15\xd6\x5a\x40\x4f\xb6\x7e\xa1\xea\xc7\x22\xed\x60\x51\x14\x2f\xe2\xb8\xde\xdd\x0a\x5c\xab\x76\x9b\x32\xb1\x53\x3f\xbc\xd9\x97\x1a\x15\x68\x92\xd0\xe7\x1a\x7b\xdc\xee\x3e\xc1\x13\xd8\xa4\xc6\xf6\xb5\xe7\xd1\x50\xc2\x4e\x89\xb6\x17\x6b\x9a\x6b\x37\xd4\x2d\xfc\xbb\x46\x83\x24\x53\x9e\x50\x60\xee\x86\xb0\x2b\xe5\x3d\xe7\x73\x99\x29\x94\x25\x0d\x89\xf6\x86\x9c\x5c\x9d\x6c\x7d\xf1\xde\x6a\x52\x35\xdd\xbf\xb8\x4d\x9a\xd7\xc0\xef\xe0\x1c\xc6\x33\xb7\xde\x30\x28\x33\x7b\xf5\x9f\x01\x00\x00\xff\xff\x54\xf9\xe1\x63\x0d\x03\x00\x00")

func templatesServiceWebhookTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServiceWebhookTmpl,
		"templates/service/webhook.tmpl",
	)
}

func templatesServiceWebhookTmpl() (*asset, error) {
	bytes, err := templatesServiceWebhookTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/service/webhook.tmpl", size: 781, mode: os.FileMode(420), modTime: time.Unix(1454625854, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if (err != nil) {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/app.tmpl": templatesAppTmpl,
	"templates/service/mysql.tmpl": templatesServiceMysqlTmpl,
	"templates/service/papertrail.tmpl": templatesServicePapertrailTmpl,
	"templates/service/postgres.tmpl": templatesServicePostgresTmpl,
	"templates/service/redis.tmpl": templatesServiceRedisTmpl,
	"templates/service/webhook.tmpl": templatesServiceWebhookTmpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"templates": &bintree{nil, map[string]*bintree{
		"app.tmpl": &bintree{templatesAppTmpl, map[string]*bintree{
		}},
		"service": &bintree{nil, map[string]*bintree{
			"mysql.tmpl": &bintree{templatesServiceMysqlTmpl, map[string]*bintree{
			}},
			"papertrail.tmpl": &bintree{templatesServicePapertrailTmpl, map[string]*bintree{
			}},
			"postgres.tmpl": &bintree{templatesServicePostgresTmpl, map[string]*bintree{
			}},
			"redis.tmpl": &bintree{templatesServiceRedisTmpl, map[string]*bintree{
			}},
			"webhook.tmpl": &bintree{templatesServiceWebhookTmpl, map[string]*bintree{
			}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
        data, err := Asset(name)
        if err != nil {
                return err
        }
        info, err := AssetInfo(name)
        if err != nil {
                return err
        }
        err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
        if err != nil {
                return err
        }
        err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
        if err != nil {
                return err
        }
        err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
        if err != nil {
                return err
        }
        return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
        children, err := AssetDir(name)
        // File
        if err != nil {
                return RestoreAsset(dir, name)
        }
        // Dir
        for _, child := range children {
                err = RestoreAssets(dir, filepath.Join(name, child))
                if err != nil {
                        return err
                }
        }
        return nil
}

func _filePath(dir, name string) string {
        cannonicalName := strings.Replace(name, "\\", "/", -1)
        return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

